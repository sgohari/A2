// <auto-generated />
using A2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace A2.Migrations
{
    [DbContext(typeof(Lab2DBContext))]
    [Migration("20181107205714_[a5]")]
    partial class a5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("A2.Models.Comment", b =>
                {
                    b.Property<string>("CommentId")
                        .HasColumnName("CommentID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasColumnName("EmpID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnName("StudentID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("CommentId");

                    b.HasIndex("EmpId");

                    b.HasIndex("StudentId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("A2.Models.Course", b =>
                {
                    b.Property<string>("CourseCode")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("CourseTitle")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("StaffId")
                        .IsRequired()
                        .HasColumnName("StaffID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnName("StudentID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("CourseCode");

                    b.HasIndex("StaffId");

                    b.HasIndex("StudentId");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("A2.Models.Login", b =>
                {
                    b.Property<string>("LoginName")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.HasKey("LoginName");

                    b.ToTable("Login");
                });

            modelBuilder.Entity("A2.Models.Rating", b =>
                {
                    b.Property<string>("RatingId")
                        .HasColumnName("RatingID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnName("StudentID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("RatingId");

                    b.HasIndex("StudentId");

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("A2.Models.Staff", b =>
                {
                    b.Property<string>("EmpId")
                        .HasColumnName("EmpID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Course")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("EmpId");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("A2.Models.Student", b =>
                {
                    b.Property<string>("StudentId")
                        .HasColumnName("StudentID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Program")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.HasKey("StudentId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("A2.Models.Comment", b =>
                {
                    b.HasOne("A2.Models.Staff", "Emp")
                        .WithMany("Comment")
                        .HasForeignKey("EmpId")
                        .HasConstraintName("FK_Comment_Staff");

                    b.HasOne("A2.Models.Student", "Student")
                        .WithMany("Comment")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Comment_Student");
                });

            modelBuilder.Entity("A2.Models.Course", b =>
                {
                    b.HasOne("A2.Models.Staff", "Staff")
                        .WithMany("CourseNavigation")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK_Course_Staff");

                    b.HasOne("A2.Models.Student", "Student")
                        .WithMany("Course")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Course_Student");
                });

            modelBuilder.Entity("A2.Models.Rating", b =>
                {
                    b.HasOne("A2.Models.Student", "Student")
                        .WithMany("Rating")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Rating_Student");
                });
#pragma warning restore 612, 618
        }
    }
}
